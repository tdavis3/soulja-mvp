{"version":3,"sources":["components/Button.js","redux/actions/types.js","redux/actions/metaData.js","components/layout/ConnectWallet.js","components/layout/Header.js","components/Text.js","components/Modal.js","components/forms/BuyForm.js","components/forms/SellForm.js","components/forms/RedeemForm.js","components/AlbumDashboard.js","components/forms/RequestForm.js","components/SignInfo.js","components/Landing.js","components/SignedCopies.js","components/AutographDraw.js","components/SingleCopy.js","App.js","redux/reducers/metaData.js","redux/reducers/contractData.js","redux/reducers/index.js","redux/store.js","reportWebVitals.js","index.js"],"names":["BaseButton","styled","Button","BuyButton","SellButton","RedeemButton","WalletButton","FormButton","CONNECT_SIGNER_AND_PROVIDER","INITIALIZE_WEBTHREE_MODAL","SET_CONTRACT_LOADING","INITIALIZE_CONTRACT","SET_DATA_LOADING","GET_DATA","RESET_DAPP","clearWeb3ModalCache","web3Modal","clearCachedProvider","localStorage","removeItem","fetchPrettyName","currentUserAddress","provider","a","lookupAddress","substring","connectWallet","dispatch","connect","on","web3Provider","ethers","providers","Web3Provider","signer","getSigner","getAddress","userAddress","prettyUserAddress","type","payload","error","accounts","newAddress","console","log","undefined","resetDapp","newPrettyUserAddress","state","metaData","className","onClick","Header","href","src","style","flexGrow","Heading","RebassHeading","SmallHeading","MediumSmallHeading","LargeHeading","Text","RebassText","SmallBoldText","BoldText","Modal","Dialog","crankThatPicture","sx","width","borderRadius","useState","amountToBuy","setAmountToBuy","as","onSubmit","e","preventDefault","py","marginBottom","mx","mb","px","display","alignItems","justifyContent","htmlFor","id","name","value","textAlign","onChange","target","marginTop","toString","amountToSell","setAmountToSell","amountToRedeem","setAmountToRedeem","StyledLink","Link","souljaBoyProfilePicture","height","marginLeft","marginRight","DataField","title","data","url","fontWeight","size","AlbumDashboard","showBuyModal","setShowBuyModal","showSellModal","setShowSellModal","showRedeemModal","setShowRedeemModal","p","color","bg","paddingRight","paddingTop","paddingLeft","paddingBottom","isOpen","onDismiss","musk","transform","SignInfo","showRequestModal","setShowRequestModal","history","useHistory","push","Landing","SignedCopies","to","pathname","AutographDraw","props","imgSrc","canvasRef","useRef","numLines","setNumLines","showAlbum","message","setMessage","useEffect","current","saveData","JSON","parse","getSaveData","lines","length","reducePrecisionOfLine","loadSaveData","stringify","parseLines","outputArr","forEach","line","points","point","x","y","newPoints","i","uploadAutograph","autograph","fetch","method","mode","body","floatsStr","res","status","alert","json","margin","brushRadius","lazyRadius","ref","padding","backgroundColor","brushColor","event","SingleCopy","signatureId","canvasRef2","replaceAll","get","disabled","App","path","initialState","loading","initialized","contract","combineReducers","action","contractData","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","4","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc3c41b8.chunk.js","sourcesContent":["import { Button } from \"rebass\";\nimport styled from \"styled-components\";\n\nexport const BaseButton = styled(Button)`\n    width: 100%;\n    text-overflow: ellipsis !important;\n    white-space: nowrap !important;\n    font-size: 25px !important;\n    color: black;\n    border-radius: 10px !important;\n    font-weight: 700;\n    font-family: \"Inter\";\n    height: 57px;\n    filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.1));\n    transition: all 0.2s ease-in-out;\n    :focus {\n        outline: 0;\n        filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.2));\n    }\n    :hover {\n        filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.2)) brightness(105%);\n        cursor: pointer;\n        transform: scale(1.03);\n    }\n`;\n\nexport const BuyButton = styled(BaseButton)`\n    background: linear-gradient(to right, #a8e063, #c8e5a4);\n`;\n\nexport const SellButton = styled(BaseButton)`\n    background: linear-gradient(to right, #f27474, #fda8a8);\n`;\n\nexport const RedeemButton = styled(BaseButton)`\n    background: linear-gradient(to right, #f3bf04, #f9da6b);\n`;\n\nexport const WalletButton = styled(BaseButton)`\n    background: white;\n    border: #eeeeee 1px solid !important;\n    color: #6f6f6f !important;\n    filter: drop-shadow(0px 5px 15px rgba(0, 0, 0, 0.07));\n`;\n\nexport const FormButton = styled(BaseButton)`\n    background: black;\n    color: white;\n`;\n","export const CONNECT_SIGNER_AND_PROVIDER = \"CONNECT_SIGNER_AND_PROVIDER\";\n\nexport const INITIALIZE_WEBTHREE_MODAL = \"INITIALIZE_WEBTHREE_MODAL\";\nexport const SET_CONTRACT_LOADING = \"SET_CONTRACT_LOADING\";\nexport const INITIALIZE_CONTRACT = \"INITIALIZE_CONTRACT\";\nexport const CONTRACT_SUCCESS = \"CONTRACT_SUCCESS\";\nexport const CONTRACT_ERROR = \"CONTRACT_ERROR\";\n\nexport const SET_DATA_LOADING = \"SET_DATA_LOADING\";\nexport const GET_DATA = \"GET_DATA\";\nexport const DATA_SUCCESS = \"DATA_SUCCESS\";\nexport const DATA_ERROR = \"DATA_ERROR\";\n\nexport const BUY = \"BUY\";\nexport const BUY_SUCCESS = \"BUY_SUCCESS\";\nexport const BUY_ERROR = \"BUY_ERROR\";\n\nexport const SELL = \"SELL\";\nexport const SELL_SUCCESS = \"SELL_SUCCESS\";\nexport const SELL_ERROR = \"SELL_ERROR\";\n\nexport const RESET_DAPP = \"RESET_DAPP\";\n","import WalletConnectProvider from '@walletconnect/web3-provider';\nimport Web3Modal from 'web3modal';\nimport {CONNECT_SIGNER_AND_PROVIDER, SET_CONTRACT_LOADING, INITIALIZE_CONTRACT, RESET_DAPP, INITIALIZE_WEBTHREE_MODAL} from \"./types\";\nimport {ethers} from \"ethers\";\n\n// import contractAddress from \"../../contracts/contract-address.json\";\n// import CArtifact from \"../../contracts/CArtifact.json\";\nlet contractAddress, CArtifact = null;  // Placeholder for now\n\nconst clearWeb3ModalCache = (web3Modal) => {\n  web3Modal.clearCachedProvider();\n  localStorage.removeItem('walletconnect');\n}\n\nconst fetchPrettyName = async (currentUserAddress, provider) => {\n  return currentUserAddress\n  ? await provider.lookupAddress(currentUserAddress) || currentUserAddress.substring(0,13) + \"…\"\n  : '0x0'\n}\n\nexport const connectWallet = (web3Modal) => async dispatch => {\n    try {\n        web3Modal.connect();\n\n        web3Modal.on('connect', async (web3Provider) => {\n          //const userAddress = (await web3.eth.getAccounts())[0];\n          const provider = new ethers.providers.Web3Provider(web3Provider);\n          const signer = provider.getSigner(0);\n          const userAddress = await signer.getAddress();\n          const prettyUserAddress = await fetchPrettyName(userAddress, provider)\n          dispatch({\n              type: CONNECT_SIGNER_AND_PROVIDER,\n              payload: {\n                  provider,\n                  signer,\n                  userAddress,\n                  prettyUserAddress\n              }\n          });\n\n          web3Provider.on('disconnect', async (error) => {\n            clearWeb3ModalCache(web3Modal)\n            dispatch({type: RESET_DAPP});\n          });\n          // TODO We reset the dapp state if the network is changed\n          //dispatch({type: RESET_DAPP});\n          web3Provider.on('accountsChanged', async (accounts) => {\n            const newAddress = accounts[0];\n            console.log(\"Account change\", newAddress);\n            // `accountsChanged` event can be triggered with an undefined newAddress.\n            // This happens when the user removes the Dapp from the \"Connected\n            // list of sites allowed access to your addresses\" (Metamask > Settings > Connections)\n            // To avoid errors, we reset the dapp state\n            if (newAddress === undefined) {\n                return resetDapp();\n            }\n            const newPrettyUserAddress = await fetchPrettyName(userAddress, provider)\n            dispatch({\n                type: CONNECT_SIGNER_AND_PROVIDER,\n                payload: {\n                    provider,\n                    signer,\n                    userAddress: newAddress,\n                    prettyUserAddress: newPrettyUserAddress\n                }\n            });\n          });\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const initializeContract = (signer) => async dispatch => {\n    try {\n        dispatch({\n            type: SET_CONTRACT_LOADING,\n            payload: {\n                loading: true\n            }\n        });\n        const contract = new ethers.Contract(\n            contractAddress.CONTRACTNAMEHERE,  // TODO: Change\n            CArtifact.abi,\n            signer\n        );\n        dispatch({\n            type: INITIALIZE_CONTRACT,\n            payload: {\n                contract: contract\n            }\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const initializeWeb3Modal = () => async dispatch => {\n  try {\n      const web3Modal = new Web3Modal({\n        network: 'mainnet',\n        cacheProvider: true,\n        providerOptions: {\n          walletconnect: {\n            package: WalletConnectProvider,\n            options: {\n              //infuraId: '52a383e497764cdc8b6ebad66e8d8c34',\n              rpc: {1: \"http://localhost:7545\", 4: \"https://eth-rinkeby.alchemyapi.io/v2/Ull-HRoY0D3yB_pSBBiigDHA4shl7DJr\"},\n            },\n          },\n        },\n      });\n      dispatch({\n          type: INITIALIZE_WEBTHREE_MODAL,\n          payload: {\n              web3Modal: web3Modal\n          }\n      });\n  } catch (error) {\n      console.log(error);\n  }\n}\n\nexport const resetDapp = () => async dispatch => {\n    try {\n        dispatch({type: RESET_DAPP});\n    } catch (error) {\n        console.log(error);\n    }\n};\n","import React from \"react\";\nimport {WalletButton} from '../../components/Button';\n// import Loading from \"../Loading\";\n// import NetworkErrorMessage from \"../errors/NetworkErrorMessage\";\nimport './ConnectWallet.css';\nimport {connect} from \"react-redux\";\nimport {connectWallet} from \"../../redux/actions/metaData\";\n\n\nconst ConnectWallet = ({connectWallet, metaData}) => {\n    return (\n        <div className=\"ConnectWallet\">\n            <div>\n                {/*<p>Please connect your wallet to the Rinkeby Test network.</p>*/}\n                {/*<Button*/}\n                {/*    style={{margin: '1.5vmin'}}*/}\n                {/*    onClick={connectWallet}*/}\n                {/*>*/}\n                {/*    Connect*/}\n                {/*</Button>*/}\n                <WalletButton onClick={!metaData.userAddress && (() => {connectWallet(metaData.web3Modal)})}>\n                    {metaData.userAddress ? \"Connected: \" + metaData.prettyUserAddress : \"Connect Wallet\"}\n                </WalletButton>\n            </div>\n            {/* Metamask network should be set to Localhost:8545. */}\n            {/*{networkError && (*/}\n            {/*    <NetworkErrorMessage*/}\n            {/*        message={networkError}*/}\n            {/*        dismiss={dismiss}*/}\n            {/*    />*/}\n            {/*)}*/}\n            {/*{loading && (<Loading/>)}*/}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metaData: state.metaData\n    }\n}\n\nexport default connect(mapStateToProps, {connectWallet})(ConnectWallet);\n","import React from 'react';\nimport './Header.css';\nimport ConnectWallet from \"./ConnectWallet\";\n\nconst Header = () => {\n    return (\n        <div className=\"Header\">\n            <a href=\"/\">\n                <img src={process.env.PUBLIC_URL+\"/sodmglogo.png\"} />\n            </a>\n            <div style={{flexGrow: 1}}/>\n            <ConnectWallet/>\n        </div>\n    );\n};\n\nexport default Header;\n","import {Heading as RebassHeading, Text as RebassText} from \"rebass\";\nimport styled from 'styled-components';\n\nexport const Heading = styled(RebassHeading)`\n  font-family: 'Inter' !important;\n  font-size: 48px !important;\n  font-weight: 700 !important;\n  color: #2D2D2D;\n`\n\nexport const SmallHeading = styled(Heading)`\n  margin-top: 7px !important;\n  font-weight: 500 !important;\n  font-size: 24px !important;\n  color: black;\n`\n\nexport const MediumSmallHeading = styled(Heading)`\n  font-size: 30px !important;\n  color: black;\n`\n\nexport const LargeHeading = styled(Heading)`\n  font-size: 60px !important;\n  color: black;\n`\n\nexport const Text = styled(RebassText)`\n  font-family: 'Inter';\n  margin-top: 42px !important;\n  font-size: 20px !important;\n  font-weight: 400 !important;\n  color: rgba(0,0,0,0.7);\n`\n\nexport const SmallBoldText = styled(RebassText)`\n  font-family: 'Inter';\n  font-size: 15px !important;\n  font-weight: 700 !important;\n  color: rgba(0,0,0,0.6);\n  margin-bottom: 9px !important;\n`\n\nexport const BoldText = styled(RebassText)`\n  font-family: 'Inter';\n  font-size: 20px !important;\n  font-weight: 700 !important;\n  color: black;\n`\n","import { Dialog, DialogOverlay, DialogContent } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\nimport styled from 'styled-components';\n\nexport const Modal = styled(Dialog)`\n  background-color: #F1F2F6;\n  border-radius: 10px;\n  max-width: 400px;\n`\n","import React, {useState} from 'react';\nimport {Box, Flex, Image} from \"rebass\";\nimport {\n    Label,\n    Input,\n    Select,\n} from '@rebass/forms'\nimport {FormButton} from \"../Button\";\nimport {connect} from \"react-redux\";\nimport {connectWallet} from \"../../redux/actions/metaData\";\nimport {BoldText, SmallHeading} from '../Text'\n\nconst crankThatPicture = <Image\n    src={process.env.PUBLIC_URL + \"/crankthat.jpg\"}\n    sx={{\n        width: '100%',\n        borderRadius: 16,\n    }}\n/>;\n\nconst BuyForm = ({connectWallet, metaData}) => {\n\n    let unitPrice = 1000;\n\n    const [amountToBuy, setAmountToBuy] = useState(0);\n\n    const handleChange = e => {\n        setAmountToBuy(e.target.value);\n    };\n\n    return (\n        <Box\n            as='form'\n            onSubmit={e => e.preventDefault()}\n            py={3}>\n            <SmallHeading marginBottom={20}>Pay</SmallHeading>\n            <Flex mx={-2} mb={3}>\n                <Box width={1 / 3} px={2}>\n\n                    {crankThatPicture}\n                </Box>\n                <Box width={2 / 3} px={2}>\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                        <Label htmlFor='amount'><BoldText>$CRANK</BoldText></Label>\n                        <Input\n                            id='amount'\n                            name='amount'\n                            value={amountToBuy}\n                            width={100}\n                            type=\"number\" //if we do number then user cant enter decimals :(\n                            textAlign=\"right\"\n                            onChange={handleChange}\n                        />\n                    </Box>\n                    {\n                        0 > 1 && //TODO: only show this part if the user is buying > 1 $CRANK\n                        <Box sx={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            marginTop: 20\n                        }}>\n                            <BoldText>Unit Price</BoldText>\n                            {\"$ \" + unitPrice.toString()}\n                        </Box>\n                    }\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: 20}}>\n                        <BoldText>Total Price</BoldText>\n                        {\"$ \" + (unitPrice * amountToBuy).toString()}\n                    </Box>\n                </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n                <Box width={1} px={2}>\n\n                </Box>\n            </Flex>\n            <FormButton onClick={!metaData.userAddress && (() => {\n                connectWallet(metaData.web3Modal)\n            })}>\n                {metaData.userAddress ? \"BUY\" : \"CONNECT WALLET\"}\n            </FormButton>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metaData: state.metaData\n    }\n}\n\nexport default connect(mapStateToProps, {connectWallet})(BuyForm);\n","import React, {useState} from 'react';\nimport {Box, Flex, Image} from \"rebass\";\nimport {\n    Label,\n    Input,\n    Select,\n} from '@rebass/forms'\nimport {FormButton} from \"../Button\";\nimport {connect} from \"react-redux\";\nimport {connectWallet} from \"../../redux/actions/metaData\";\nimport {BoldText, SmallHeading} from '../Text'\n\nconst crankThatPicture = <Image\n    src={process.env.PUBLIC_URL + \"/crankthat.jpg\"}\n    sx={{\n        width: '100%',\n        borderRadius: 16,\n    }}\n/>;\n\nconst SellForm = ({connectWallet, metaData}) => {\n\n    let unitPrice = 1000;\n\n    const [amountToSell, setAmountToSell] = useState(0);\n\n    const handleChange = e => {\n        setAmountToSell(e.target.value);\n    };\n\n    return (\n        <Box\n            as='form'\n            onSubmit={e => e.preventDefault()}\n            py={3}>\n            <SmallHeading marginBottom={20}>Sell</SmallHeading>\n            <Flex mx={-2} mb={3}>\n                <Box width={1 / 3} px={2}>\n\n                    {crankThatPicture}\n                </Box>\n                <Box width={2 / 3} px={2}>\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                        <Label htmlFor='amount'><BoldText>$CRANK</BoldText></Label>\n                        <Input\n                            id='amount'\n                            name='amount'\n                            value={amountToSell}\n                            width={100}\n                            type=\"number\" //if we do number then user cant enter decimals :(\n                            textAlign=\"right\"\n                            onChange={handleChange}\n                        />\n                    </Box>\n                    {\n                        0 > 1 && //TODO: only show this part if the user is buying > 1 $CRANK\n                        <Box sx={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            marginTop: 20\n                        }}>\n                            <BoldText>Unit Price</BoldText>\n                            {\"$ \" + unitPrice.toString()}\n                        </Box>\n                    }\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: 20}}>\n                        <BoldText>You'll Receive</BoldText>\n                        {\"$ \" + (unitPrice * amountToSell).toString()}\n                    </Box>\n                </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n                <Box width={1} px={2}>\n\n                </Box>\n            </Flex>\n            <FormButton onClick={!metaData.userAddress && (() => {\n                connectWallet(metaData.web3Modal)\n            })}>\n                {metaData.userAddress ? \"SELL\" : \"CONNECT WALLET\"}\n            </FormButton>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metaData: state.metaData\n    }\n}\n\nexport default connect(mapStateToProps, {connectWallet})(SellForm);\n","import React, {useState} from 'react';\nimport {Box, Flex, Image} from \"rebass\";\nimport {\n    Label,\n    Input,\n    Select,\n} from '@rebass/forms'\nimport {FormButton} from \"../Button\";\nimport {connect} from \"react-redux\";\nimport {connectWallet} from \"../../redux/actions/metaData\";\nimport {BoldText, SmallHeading} from '../Text'\n\nconst crankThatPicture = <Image\n    src={process.env.PUBLIC_URL + \"/crankthat.jpg\"}\n    sx={{\n        width: '100%',\n        borderRadius: 16,\n    }}\n/>;\n\nconst RedeemForm = ({connectWallet, metaData}) => {\n\n    const [amountToRedeem, setAmountToRedeem] = useState(0);\n\n    const handleChange = e => {\n        setAmountToRedeem(e.target.value);\n    };\n\n    return (\n        <Box\n            as='form'\n            onSubmit={e => e.preventDefault()}\n            py={3}>\n            <SmallHeading marginBottom={20}>Redeem</SmallHeading>\n            <Flex mx={-2} mb={3}>\n                <Box width={1 / 3} px={2}>\n\n                    {crankThatPicture}\n                </Box>\n                <Box width={2 / 3} px={2}>\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n                        <Label htmlFor='amount'><BoldText>$CRANK</BoldText></Label>\n                        <Input\n                            id='amount'\n                            name='amount'\n                            value={amountToRedeem}\n                            width={100}\n                            type=\"number\"\n                            textAlign=\"right\"\n                            onChange={handleChange}\n                        />\n                    </Box>\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: 20}}>\n                        <BoldText>You'll Receive</BoldText>\n                        {amountToRedeem > 0 ? amountToRedeem : 0} NFT\n                    </Box>\n                </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n                <Box width={1} px={2}>\n\n                </Box>\n            </Flex>\n            <FormButton onClick={!metaData.userAddress && (() => {\n                connectWallet(metaData.web3Modal)\n            })}>\n                {metaData.userAddress ? \"REDEEM\" : \"CONNECT WALLET\"}\n            </FormButton>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metaData: state.metaData\n    }\n}\n\nexport default connect(mapStateToProps, {connectWallet})(RedeemForm);\n","import React, {useState} from \"react\";\nimport {Box, Flex, Image, Link} from \"rebass\";\nimport {Heading, SmallHeading, Text, SmallBoldText, BoldText} from './Text'\nimport {BuyButton, RedeemButton, SellButton} from \"./Button\";\nimport {Modal} from \"./Modal\"\nimport BuyForm from \"./forms/BuyForm\"\nimport SellForm from \"./forms/SellForm\"\nimport RedeemForm from \"./forms/RedeemForm\"\nimport {ExternalLink, X} from 'react-feather';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`\n\nconst souljaBoyProfilePicture = <Image\n    src={process.env.PUBLIC_URL + \"/souljaboy.jpg\"}\n    sx={{\n        width: 32,\n        height: 32,\n        borderRadius: 9999,\n        marginLeft: 24,\n        marginRight: 10,\n    }}\n/>;\n\nconst crankThatPicture = <Image\n    src={process.env.PUBLIC_URL + \"/crankthatsideways.png\"}\n    sx={{\n        //width: ['100%', '50%'],\n        width: 450,\n        borderRadius: 8,\n    }}\n/>;\n\nconst DataField = ({title, data, url}) => {\n    return (<>\n        <SmallBoldText>{title}</SmallBoldText>\n        {url\n            ? <StyledLink href={url}><BoldText sx={{fontWeight: 700}}>{data}<ExternalLink\n                size={16}/></BoldText></StyledLink>\n            : <BoldText sx={{fontWeight: 700}}>{data}</BoldText>}\n    </>)\n}\n\n\nconst AlbumDashboard = () => {\n\n    const [showBuyModal, setShowBuyModal] = useState(false);\n    const [showSellModal, setShowSellModal] = useState(false);\n    const [showRedeemModal, setShowRedeemModal] = useState(false);\n\n    return (\n        <Flex marginBottom={120}>\n            <Box\n                p={3}\n                width={1 / 2}\n                color='#6F6F6F'\n                bg='primary'\n                paddingRight={76}>\n                <Heading>\n                    Soulja World\n                </Heading>\n                <SmallHeading>\n                    <span style={{display: \"flex\", alignItems: \"center\"}}>By {souljaBoyProfilePicture} Soulja Boy</span>\n                </SmallHeading>\n                <Text marginBottom={20}>\n                    Soulja Boy’s first digital album drop. Buy $CRANK tokens, sell $CRANK tokens. When you’re ready to\n                    join the club of winners, redeem for a signed digital album. You can request Soulja Boy sign your\n                    digital album.\n                </Text>\n                <Flex\n                    marginBottom={48}>\n                    <Box\n                        width={1 / 3}\n                        color=\"black\"\n                        bg=\"primary\"\n                        paddingTop={28}\n                        paddingLeft={0}>\n                        <DataField title=\"Last Traded Price\" data=\"420.69\"/>\n                    </Box>\n                    <Box\n                        width={1 / 3}\n                        color=\"black\"\n                        bg=\"primary\"\n                        paddingTop={28}>\n                        <DataField title=\"Available\" data=\"77/420\"/>\n                    </Box>\n                    <Box\n                        width={1 / 3}\n                        color=\"black\"\n                        bg=\"primary\"\n                        paddingTop={28}\n                        paddingRight={0}>\n                        <DataField title=\"ERC20 Contract\" data=\"0x00000…\" url=\"http://\"/>\n                    </Box>\n                </Flex>\n                <Flex>\n                    <Box\n                        p={3}\n                        width={1 / 2}\n                        color='#6F6F6F'\n                        bg='primary'\n                        paddingLeft={0}\n                        paddingBottom={28}\n                        paddingTop={0}>\n                        <BuyButton onClick={() => setShowBuyModal(true)}>\n                            BUY\n                        </BuyButton>\n                    </Box>\n                    <Box\n                        p={3}\n                        width={1 / 2}\n                        color='#6F6F6F'\n                        bg='secondary'\n                        paddingRight={0}\n                        paddingBottom={28}\n                        paddingTop={0}>\n                        <SellButton onClick={() => setShowSellModal(true)}>\n                            SELL\n                        </SellButton>\n                    </Box>\n                </Flex>\n                <RedeemButton onClick={() => setShowRedeemModal(true)}>\n                    REDEEM\n                </RedeemButton>\n            </Box>\n            <Box\n                p={3}\n                width={1 / 2}\n                color='#6F6F6F'\n                bg='#F1F2F6'\n                sx={{\n                    borderRadius: 8,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                }}>\n                {crankThatPicture}\n            </Box>\n            <Modal isOpen={showBuyModal} onDismiss={() => setShowBuyModal(false)}>\n                <StyledLink href=\"javascript:void(0);\" onClick={() => setShowBuyModal(false)}><X/></StyledLink>\n                <BuyForm/>\n            </Modal>\n            <Modal isOpen={showSellModal} onDismiss={() => setShowSellModal(false)}>\n                <StyledLink href=\"javascript:void(0);\" onClick={() => setShowSellModal(false)}><X/></StyledLink>\n                <SellForm/>\n            </Modal>\n            <Modal isOpen={showRedeemModal} onDismiss={() => setShowRedeemModal(false)}>\n                <StyledLink href=\"javascript:void(0);\" onClick={() => setShowRedeemModal(false)}><X/></StyledLink>\n                <RedeemForm/>\n            </Modal>\n        </Flex>\n    );\n}\n\nexport default AlbumDashboard;\n","import React, {useState} from 'react';\nimport {Box, Flex, Image} from \"rebass\";\nimport {\n    Label,\n    Input,\n    Select,\n    Textarea\n} from '@rebass/forms'\nimport {FormButton} from \"../Button\";\nimport {connect} from \"react-redux\";\nimport {connectWallet} from \"../../redux/actions/metaData\";\nimport {BoldText, SmallHeading} from '../Text'\n\nconst crankThatPicture = <Image\n    src={process.env.PUBLIC_URL + \"/crankthat.jpg\"}\n    sx={{\n        width: '100%',\n        borderRadius: 16,\n    }}\n/>;\n\nconst RequestForm = ({connectWallet, metaData}) => {\n    return (\n        <Box\n            as='form'\n            onSubmit={e => e.preventDefault()}\n            py={3}>\n            <SmallHeading marginBottom={20}>Request Signature</SmallHeading>\n            <Flex mx={-2} mb={3}>\n                <Box width={1 / 3} px={2}>\n                    {crankThatPicture}\n                </Box>\n                <Box width={2 / 3} px={2}>\n                        <Label htmlFor='amount'><BoldText>Personal Message</BoldText></Label>\n                        <Textarea\n                            id='amount'\n                            name='amount'\n                            value=''\n                            width={\"100%\"}\n                            height={80}\n                            marginTop={20}\n                            type=\"number\" //if we do number then user cant enter decimals :(\n                        />\n                </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n                <Box width={1} px={2}>\n\n                </Box>\n            </Flex>\n            <FormButton onClick={!metaData.userAddress && (() => {\n                connectWallet(metaData.web3Modal)\n            })}>\n                {metaData.userAddress ? \"REQUEST\" : \"CONNECT WALLET\"}\n            </FormButton>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metaData: state.metaData\n    }\n}\n\nexport default connect(mapStateToProps, {connectWallet})(RequestForm);\n","import React, {useState} from \"react\";\nimport {Flex, Box, Image, Link} from \"rebass\";\nimport {Modal} from \"./Modal\"\nimport {useHistory} from 'react-router-dom';\nimport {X} from 'react-feather';\nimport {LargeHeading, Text, BoldText, MediumSmallHeading} from './Text'\nimport {RedeemButton} from \"./Button\";\nimport RequestForm from \"./forms/RequestForm\"\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`\n\nconst musk = <Image\n    src={process.env.PUBLIC_URL + \"/em_sig.jpg\"}\n    sx={{\n        width: ['80%', '60%'],\n        borderRadius: 8,\n        transform: 'rotate(-14deg)'\n    }}\n/>;\n\n\nconst SignInfo = () => {\n    const [showRequestModal, setShowRequestModal] = useState(false);\n    let history = useHistory();\n\n    return (\n        <div style={{marginTop: 160}}>\n            <Flex>\n                <Box\n                    p={3}\n                    width={1 / 2}\n                    color='#6F6F6F'\n                    bg='primary'\n                    paddingLeft={0}>\n                    <LargeHeading>Get Your<br/>Album Signed</LargeHeading>\n                    <Text>\n                        Make your NFT album personal by requesting a signing from Soulja Boy. He'll write a special message of your request and manually scribble his signature on the coverart. This is the most personal digital music you've had in a long time.\n                    </Text>\n                </Box>\n                <Box\n                    p={3}\n                    width={1 / 2}\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                    }}\n                    paddingRight={0}>\n                    {musk}\n                </Box>\n                {/*TODO: ListView of copies*/}\n            </Flex>\n            <MediumSmallHeading marginTop={100}>Select an NFT to sign</MediumSmallHeading>\n            <RedeemButton style={{marginTop: 25}} onClick={() => setShowRequestModal(true)}>\n                Soulja Sign Me!\n            </RedeemButton>\n            <Modal isOpen={showRequestModal} onDismiss={() => setShowRequestModal(false)}>\n                <StyledLink href=\"javascript:void(0);\" onClick={() => setShowRequestModal(false)}><X/></StyledLink>\n                <RequestForm/>\n            </Modal>\n            <BoldText style={{marginTop: 20, textAlign:\"center\"}}><StyledLink href=\"javascript:void(0);\" onClick={() => history.push('/signed')}>See All Signed Copies</StyledLink></BoldText>\n        </div>\n    );\n}\n\nexport default SignInfo;\n","import React from \"react\";\n// import './Landing.css';\nimport AlbumDashboard from \"./AlbumDashboard\";\nimport SignInfo from \"./SignInfo\";\n\n\nconst Landing = () => {\n    return (\n        <div>\n            <AlbumDashboard/>\n            <hr/>\n            <SignInfo/>\n        </div>\n    );\n}\n\nexport default Landing;\n","import React, { useState } from \"react\";\nimport {Box, Flex} from \"rebass\";\nimport {Link} from \"react-router-dom\";\n\nimport {Heading, SmallHeading} from './Text'\n\nconst SignedCopies = () => {\n    return (\n        <div>\n            <Heading>Signed Copies</Heading>\n            <Flex>\n                <Box\n                    p={3}\n                    width={1 / 2}\n                    color='#6F6F6F'\n                    bg='primary'\n                >\n                    <SmallHeading>Owner</SmallHeading>\n                    <ul>\n                        <li style={{marginBottom: 20}}>\n                            <Link to={{pathname: \"/signed-copy\"}}>katz The Man</Link>\n                        </li>\n                        <li>evan The God</li>\n                        <li>td3 The Boss</li>\n                    </ul>\n                </Box>\n                <Box\n                    p={3}\n                    width={1 / 2}\n                    color='#6F6F6F'\n                    bg='primary'\n                >\n                    <SmallHeading>Message</SmallHeading>\n                    <ul>\n                        <li style={{marginBottom: 20}}>To my parents who died in an acrobatics accident...</li>\n                        <li>To my parents who died in an acrobatics accident...</li>\n                        <li>To my parents who died in an acrobatics accident...</li>\n                    </ul>\n                </Box>\n            </Flex>\n        </div>\n    );\n}\n\nexport default SignedCopies;\n","import React, {useRef, useState, useEffect} from \"react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { Label, Checkbox, Textarea } from '@rebass/forms'\nimport { Box } from 'rebass'\nimport { FormButton } from './Button';\n\nconst AutographDraw = (props) => {\n    const {imgSrc = \"\"} = props;\n    const canvasRef = useRef(null);\n    // Keeps track of how many lines are in image\n    const [numLines, setNumLines] = useState(0);\n    // Whether album is shown on signature canvas background\n    const [showAlbum, setShowAlbum] = useState(true);\n    // Message value\n    const [message, setMessage] = useState('');\n\n    const onChange = () => {\n        if (!canvasRef.current) return;\n        const saveData = JSON.parse(canvasRef.current.getSaveData());\n        setNumLines(saveData.lines.length);\n    };\n\n    useEffect(() => {\n        if (!canvasRef.current) return;\n        if (numLines < 1) return;\n        // Compress recently-added line\n        const saveData = JSON.parse(canvasRef.current.getSaveData());\n        saveData.lines[saveData.lines.length - 1] = reducePrecisionOfLine(\n            saveData.lines[saveData.lines.length - 1]\n        );\n        setNumLines(saveData.lines.length);\n        canvasRef.current.loadSaveData(JSON.stringify(saveData), true);\n        console.log(parseLines());\n    }, [numLines]);\n\n    const parseLines = () => {\n        const outputArr = [];\n        const saveData = JSON.parse(canvasRef.current.getSaveData());\n        console.log(saveData);\n        const lines = saveData.lines;\n        if (lines) {\n            lines.forEach((line) => {\n                line.points.forEach((point) => {\n                    outputArr.push(point.x);\n                    outputArr.push(point.y);\n                });\n                // (-1,-1) separates lines\n                outputArr.push(-1);\n                outputArr.push(-1);\n            });\n        }\n        console.log(outputArr);\n        return outputArr;\n    };\n\n    // Returns line but with reduced precision\n    const reducePrecisionOfLine = (line) => {\n        const newPoints = [];\n        for (let i = 0; i < line.points.length; i += 5) {\n            newPoints.push(line.points[i]);\n        }\n        // Always include last point\n        newPoints.push(line.points[line.points.length - 1]);\n        return {\n            ...line,\n            points: newPoints, // replace points with newPoints\n        };\n    };\n\n    // Reduces precision of savedata\n    const reducePrecision = (saveData) => {\n        const newLines = [];\n        const lines = saveData.lines;\n        lines.forEach((line) => {\n            const newLine = reducePrecisionOfLine(line);\n            newLines.push(newLine);\n        });\n\n        return {\n            ...saveData,\n            lines: newLines, // replace lines with newLines\n        };\n    };\n\n    const compress = () => {\n        const saveData = JSON.parse(canvasRef.current.getSaveData());\n        const reducedPrecisionSaveData = JSON.stringify(reducePrecision(saveData));\n        canvasRef.current.loadSaveData(reducedPrecisionSaveData, true); // 2nd argument = \"load immediately, don't do redraw animation\"\n    };\n\n    const uploadAutograph = async () => {\n      const autograph = parseLines();\n      const res = await fetch('http://localhost:9000/upload-autograph', {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify({ floatsStr: JSON.stringify(autograph), message })\n      });\n      console.log(res)\n      if(res.status === 200) {\n        alert('Successfully added autograph!')\n        const json = await res.json();\n        const id = json.id;\n        // TODO: do something with this ID in eth!\n      } else {\n        alert('Failed :(')\n      }\n    };\n\n    return (\n        <div style={{ margin: 'auto', textAlign: 'center' }}>\n            <CanvasDraw\n                brushRadius={4}\n                lazyRadius={2}\n                ref={canvasRef}\n                onChange={onChange}\n                imgSrc={showAlbum ? process.env.PUBLIC_URL + \"/crankthat.jpg\" : \"\"}\n                style={{ margin: 'auto', padding: '30px 80px 30px 80px', backgroundColor: '#F1F2F6', borderRadius: '10px' }}\n                brushColor=\"#FFF\"\n            />\n            {/* Doesn't work :( stretch goal (TODO) <div style={{ display: 'inherit', margin: '20px auto 20px auto', width: '450px', }}>\n              <FormButton onClick={() => setShowAlbum(!showAlbum)}>\n                {showAlbum ? \"Hide album background\" : \"Show album background\"}\n              </FormButton>\n            </div> */}\n            <Box style={{ width: '560px', margin: '30px auto 30px auto' }}>\n              <Label htmlFor='comment'>Message</Label>\n              <Textarea\n                id='comment'\n                name='comment'\n                value={message}\n                onChange={event => setMessage(event.target.value)}\n              />\n            </Box>\n            <div style={{ display: 'inherit', margin: '20px auto 20px auto', width: '450px', }}>\n              <FormButton onClick={uploadAutograph}>\n                Add Autograph!\n              </FormButton>\n            </div>\n        </div>\n    );\n};\n\nexport default AutographDraw;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport {Box, Flex, Image} from \"rebass\";\n\nimport {Heading, SmallHeading, MediumSmallHeading, Text} from './Text';\nimport CanvasDraw from \"react-canvas-draw\";\n\n\nconst crankThatPicture = <Image\n    src={process.env.PUBLIC_URL + \"/crankthat.jpg\"}\n    sx={{\n        width: ['100%', '50%'],\n        borderRadius: 8,\n    }}\n/>;\n\nconst souljaBoyProfilePicture = <Image\n    src={process.env.PUBLIC_URL + \"/souljaboy.jpg\"}\n    sx={{\n        width: 32,\n        height: 32,\n        borderRadius: 9999,\n        marginLeft: 24,\n        marginRight: 10,\n    }}\n/>;\n\nconst SingleCopy = () => {\n\n    const [signatureId, setSignatureId] = useState(161890784);\n    const [message, setMessage] = useState('');\n\n    const canvasRef = useRef(null);\n    const canvasRef2 = useRef(null);\n\n    useEffect(() => {\n      async function get() {\n        if (!canvasRef.current) return;\n        const res = await fetch('http://localhost:9000/get-autograph', {\n          method: 'POST',\n          mode: 'cors',\n          body: JSON.stringify({ id: signatureId })\n        });\n        const json = await res.json();\n        const autograph = json.autograph;\n        canvasRef.current.loadSaveData(JSON.stringify(autograph));\n        canvasRef2.current.loadSaveData(JSON.stringify(autograph).replaceAll('#FFF', '#444'));\n        setMessage(json.message)\n      }\n      get();\n    }, [signatureId, canvasRef]);\n\n    return (\n        <Flex>\n            <Box\n                p={3}\n                width={1 / 2}\n                color='#6F6F6F'\n                bg='primary'>\n                <Heading>\n                    Soulja World #1\n                </Heading>\n                <SmallHeading>\n                    <span style={{display: \"flex\", alignItems: \"center\"}}>Owned by {souljaBoyProfilePicture} katz The Man</span>\n                </SmallHeading>\n                {message &&<Text marginBottom={20}>\n                    \"{message}\" - Soulja\n                </Text> }\n                <div>\n                    <MediumSmallHeading>Signature</MediumSmallHeading>\n                    <CanvasDraw\n                      disabled\n                      brushRadius={4}\n                      lazyRadius={2}\n                      ref={canvasRef2}\n                      style={{ margin: '20px auto 20px auto', padding: '5px', backgroundColor: '#F1F2F6', borderRadius: '10px' }}\n                    />\n                    <div>\n\n                    </div>\n                </div>\n            </Box>\n            <Box\n                p={3}\n                width={1 / 2}\n                color='#6F6F6F'\n                bg='#F1F2F6'\n                sx={{\n                    borderRadius: 8,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                }}\n            >\n                <CanvasDraw\n                  disabled\n                  brushRadius={4}\n                  lazyRadius={2}\n                  ref={canvasRef}\n                  imgSrc={process.env.PUBLIC_URL + \"/crankthat.jpg\"}\n                  style={{ margin: 'auto', padding: '30px 80px 30px 80px', backgroundColor: '#F1F2F6', borderRadius: '10px' }}\n                  brushColor=\"#FFF\"\n                />\n            </Box>\n        </Flex>\n    );\n}\n\nexport default SingleCopy;\n","import './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Landing from \"./components/Landing\";\nimport SignedCopies from \"./components/SignedCopies\";\nimport AutographDraw from \"./components/AutographDraw\";\nimport SingleCopy from \"./components/SingleCopy\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                {/*<header className=\"App-header\">*/}\n                {/*    <AutographDraw/>*/}\n                {/*</header>*/}\n                <Header/>\n                <Switch>\n                    <Route path=\"/signed\">\n                        <SignedCopies/>\n                    </Route>\n                    <Route path=\"/autograph\">\n                        <AutographDraw />\n                    </Route>\n                    <Route path=\"/signed-copy\">\n                        <SingleCopy/>\n                    </Route>\n                    <Route path=\"/\">\n                        <Landing/>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import {CONNECT_SIGNER_AND_PROVIDER, SET_CONTRACT_LOADING, INITIALIZE_CONTRACT, RESET_DAPP, INITIALIZE_WEBTHREE_MODAL} from \"../actions/types\";\n\n\nconst initialState = {\n    loading: false,\n    initialized: false,\n    provider: undefined,\n    signer: null,\n    web3Modal: undefined,\n    contract: undefined,\n    userAddress: undefined,\n    prettyUserAddress: \"0x0\"\n};\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CONTRACT_LOADING: {\n            const {loading} = action.payload;\n            return {\n                ...state,\n                loading: loading\n            };\n        }\n        case CONNECT_SIGNER_AND_PROVIDER: {\n            const {provider, userAddress, prettyUserAddress, signer} = action.payload;\n            return {\n                ...state,\n                userAddress,\n                prettyUserAddress,\n                provider,\n                signer\n            };\n        }\n        case INITIALIZE_CONTRACT: {\n            const {contract} = action.payload;\n            return {\n                ...state,\n                initialized: true,\n                contract: contract,\n                loading: false\n            };\n        }\n        case INITIALIZE_WEBTHREE_MODAL: {\n            const {web3Modal} = action.payload;\n            return {\n              ...state,\n              web3Modal\n            }\n        }\n        case RESET_DAPP: {\n            return initialState;\n        }\n        default:\n            return state;\n    }\n}\n","import {GET_DATA, SET_DATA_LOADING} from \"../actions/types\";\n\n\nconst initialState = {\n    loading: false,\n    data: undefined\n};\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_DATA_LOADING: {\n            const {loading} = action.payload;\n            return {\n                ...state,\n                loading: loading\n            };\n        }\n        case GET_DATA: {\n            const {data} = action.payload;\n            return {\n                ...state,\n                data: data,\n                loading: false\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport metaData from \"./metaData\";\nimport contractData from \"./contractData\";\n\nexport default combineReducers({metaData, contractData});\n","import {createStore, applyMiddleware} from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport {initializeWeb3Modal} from './redux/actions/metaData.js'\n\nstore.dispatch(initializeWeb3Modal())\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}